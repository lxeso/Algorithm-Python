# 백준 2870번 '수학숙제'
# 종이에는 숫자와 알파벳 소문자로 되어있는 글자가 N줄 있다. 여기서 모든 숫자를 찾은 뒤, 이 숫자를 비내림차순으로 정리해야한다. 숫자의 앞에 0이 있는 경우에는 정리하면서 생략할 수 있다. 
# 글자를 살펴보다가 숫자가 나오는 경우에는, 가능한 가장 큰 숫자를 찾아야 한다. 즉, 모든 숫자의 앞과 뒤에 문자가 있거나, 줄의 시작 또는 끝이어야 한다.
# 예를 들어, 01a2b3456cde478에서 숫자를 찾으면 1, 2, 3456, 478이다.
# 입력 : 첫째 줄에 종이의 줄의 개수 N이 주어진다. (1 ≤ N ≤ 100) 다음 N개의 줄에는 각 줄의 내용이 주어진다. 각 줄은 최대 100글자이고, 항상 알파벳 소문자와 숫자로만 이루어져 있다.
# 출력 : 종이에서 찾은 숫자의 개수를 M이라고 하면, 출력은 M줄로 이루어져야 한다. 각 줄에는 종이에서 찾은 숫자를 하나씩 출력해야 한다. 이때, 비내림차순으로 출력해야 한다. 비내림차순은 내림차순의 반대인 경우인데, 다음 수가 앞의 수보다 크거나 같은 경우를 말한다.
import re # 정규 표현식을 사용하기 위한 모듈

def solution():
    n = int(input())  # 첫 번째 입력: 종이의 줄 수 N을 정수로 입력받음
    numbers = [] # 숫자들을 저장할 리스트 초기화

    for _ in range(n): # 각 줄에 대해 반복
        line = input().strip() # 한 줄을 입력받고 양 끝의 공백 제거
        #정규 표현식을 이용해 문자열에서 숫자를 모두 찾음
        # '\d+'는 한 자리 이상의 숫자를 의미함
        found_numbers = re.findall(r'\d+', line)
    
        #숫자들 앞의 '0'을 제거하고 int형으로 변환하여 numbers 리스트에 추가
        for num in found_numbers:
            numbers.append(int(num)) # 숫자를 정수형으로 변환하여 numbers 리스트에 추가

    numbers.sort() # 숫자 리스트를 비내림차순으로 정렬 (기본 정렬이 오름차순)

    for num in numbers:
        print(num)

solution()
