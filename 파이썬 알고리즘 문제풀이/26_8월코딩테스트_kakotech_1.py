# 카카오테크 부트캠프 8월 코딩테스트 1번문제
# 문제 : 주어진 쿠키의 맛있는 정도를 고려하여 쿠키를 먹는 순서를 결정하는 문제입니다. 구름이가 쿠키를 먹는 순서를 결정할 때, 맛있는 정도의 곱을 최대화하는 것이 목표이며, 여러 가지 최적의 순서가 있을 경우 사전순으로 가장 앞서는 순서를 출력
# 입력 : 첫째 줄에 쿠키의 개수 N이 주어진다. 둘째 줄에는 A[1], A[2],•••, A[N]이 공백을 두고 주어진다. A[i]는 i번 쿠키의 맛있는 정도를 수치로 나타낸 것이다. 1 ≤ N ≤ 100000, 1 ≤ A[i] ≤ 100000, 입력으로 주어지는 모든 수는 정수이다.
# 출력 : 구름이가 최대한 맛있게 모든 쿠키를 먹는 순서에 따라 차례대로 쿠키 N개의 번호를 공백을 두고 출력한다. 즉, 일이 지났을 때 먹은 쿠키의 번호를 C, 라 할 때, C[0], C[1], …,C[N-1]을 공백을 두고 출력한다. 만약, 최대한 맛있게 모든 쿠키를 먹는 순서가 여러 가지라면, **사전순으로 제일 앞서는 순서**를 출력한다.

def solution():
    n = int(input()) # 쿠키의 개수 N을 입력받음
    A = list(map(int, input().split())) # 각 쿠키의 맛있는 정도를 리스트 A에 저장

    cookies = [(A[i], i+1) for i in range(n)] # 각 쿠키의 맜있는 정도와 인덱스를 튜플로 묶어서 리스트로 변환
    # 값 예시) cookies = [(5, 1), (4, 2), (4, 3), (3, 4)] # 쿠키의 인덱스는 1부터 시작
    
    cookies.sort(key=lambda x: (-x[0], x[1])) # 맛있는 정도를 내림차순으로 정렬, 맛있는 정도가 같을 경우 인덱스를 기준으로 오름차순 정렬
    # - 첫 번째 기준 `x[0]` : `x[0]`은 쿠키의 맛있는 정도를 나타냄.  음수로 변환한 값이므로, 맛있는 정도가 큰 순서대로 정렬
    # - 두 번째 기준 'x[1]' : 'x[1]'은 쿠키의 인덱스(쿠키의 번호)를 나타냄. 쿠키의 맛있는 정도가 동일할 경우, 인덱스 번호를 오름차순으로 정렬

    # 정렬된 쿠키의 인덱스만을 리스트로 추출하여 출력
    result = [str(cookie[1]) for cookie in cookies] 
    # cookie[0]: 각 튜플의 첫 번째 요소로, A[i] 즉, 해당 쿠키의 맛있는 정도가 저장됨.
    # cookie[1]: 각 튜플의 두 번째 요소로, i + 1 즉, 해당 쿠키의 번호가 저장됨
    print(" ".join(result))

# 예제 실행
solution()


# 문제
'''

문제

구름이는 초코 쿠키를 좋아한다. 그래서 초코 쿠키가 N개 들어있는 초코 쿠키 세트를 구매했다.
초코 쿠키마다 1번부터 N번까지 차례대로 번호가 부여되어 있다. 그리고 i번 쿠키의 맛있는 정도를 수치로 나타낼 수 있는데 이를 A[i]라 한다.
구름이는 한번에 모두 먹고 싶었지만 이가 썩어 치과에 가는 것이 두려웠다. 그래서 구매한 날부터 **매일 하나씩** 먹기로 했다. 또한, 반드시 한번 먹기 시작한 쿠키는 그날 다 먹기로 했다. 하지만 쿠키는 하루가 지날 때마다 맛있는 정도가 감소한다. 이를 수치로 표현한다면, 구매한 날부터 일이 지났을 때의 번 쿠키의 맛있는 장도는 A[i]- j 이며, 이 수치는 0 미만으로 떨어지지 않는다.
구름이는 쿠키를 최대한 맛있게 모두 먹기 위해 **구름이가 먹은 모든 쿠키의 맛있는 정도의 곱을 최대화**해야 한다고 생각한다. 구름이가 쿠키를 최대한 맛있게 모든 쿠키를 먹는 순서를 알아보자.

입력

첫째 줄에 쿠키의 개수 N이 주어진다.

둘째 줄에는 A[1], A[2],•••, A[N]이 공백을 두고 주어진다. A[i]는 i번 쿠키의 맛있는 정도를 수치로 나타낸 것이다.

- 1 ≤ N ≤ 100000
- 1 ≤ A[i] ≤ 100000
- 입력으로 주어지는 모든 수는 정수이다.

출력

구름이가 최대한 맛있게 모든 쿠키를 먹는 순서에 따라 차례대로 쿠키 N개의 번호를 공백을 두고 출력한다. 즉, 일이 지났을 때 먹은 쿠키의 번호를 C, 라 할 때, C[0], C[1], …,C[N-1]을 공백을 두고 출력한다. 만약, 최대한 맛있게 모든 쿠키를 먹는 순서가 여러 가지라면, **사전순으로 제일 앞서는 순서**를 출력한다.

입력1
5
5 4 3 2 1
출력1
5 4 3 2 1
입력2
5
4 3 2 1 1
출력2
1 2 3 4 5

'''